<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Validation on Sergio Carracedo</title><link>https://sergiocarracedo.es/tags/validation/</link><description>Recent content in Validation on Sergio Carracedo</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 01 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://sergiocarracedo.es/tags/validation/index.xml" rel="self" type="application/rss+xml"/><item><title>Axios interceptors to validate allowed headers</title><link>https://sergiocarracedo.es/axios-interceptors-validate-headers/</link><pubDate>Mon, 01 Jul 2024 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/axios-interceptors-validate-headers/</guid><description>&lt;p>Today I want to share a small tip working with CORS and Axios.&lt;/p>
&lt;p>It&amp;rsquo;s very typical in the backend to only allow certain headers, even more so when it defines the CORS-related &lt;code>Access-Control-Request-Headers&lt;/code> header used in response to a preflight request. In those cases, if the frontend
make a request with an &lt;em>unexpected&lt;/em> header the request will be rejected.&lt;/p>
&lt;p>This kind of issue mostly happens in the production environments because the browser ignores CORS headers when it
fetches data from &lt;code>localhost&lt;/code>. That is a problem as nobody will probably detect an issue sending unexpected headers
before deploying the code to production.&lt;/p></description></item></channel></rss>