<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Sergio Carracedo</title><link>https://sergiocarracedo.es/tags/golang/</link><description>Recent content in Golang on Sergio Carracedo</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 16 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://sergiocarracedo.es/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>A real-world "on a meeting" light sign</title><link>https://sergiocarracedo.es/a-real-world-on-a-meeting-light-sign/</link><pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/a-real-world-on-a-meeting-light-sign/</guid><description>Me and my wife work remotely and we do it in the same room, but there is a problem: the meetings, and obviously, working remotely we have, let&amp;rsquo;s say, more than we would like, and is not always easy to know when the other is in a meeting.
I decided to find a solution to make it visible when someone is in a meeting simply, only with a sight.
The solution: Put a light sign on the working room&amp;rsquo;s wall and turn it on when I am in a meet and off when I am not, simple.</description></item><item><title>Generics in Golang 1.18</title><link>https://sergiocarracedo.es/generics-in-golang-1.18/</link><pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/generics-in-golang-1.18/</guid><description>At the moment of writing this post Go 1.18 wasn&amp;rsquo;t released (the latest version for 1.18 is the Release Candidate 1), but we can still play using the playground (enabling the dev branch) or installing the RC
go install golang.org/dl/go1.18rc1@latest go1.18rc1 download One of the most interesting novelties is the generics in a similar way we have in other languages (C#, Java, Typescript, etc&amp;hellip;). Generics allow us as developers, for example, to create a function that works with different types.</description></item><item><title>Integration tests in Golang with dockertest</title><link>https://sergiocarracedo.es/integration-tests-in-golang-with-dockertest/</link><pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/integration-tests-in-golang-with-dockertest/</guid><description>Do integration testing (or system testing) usually means to have a database populated with data, services like redis, elasticsearch, etc&amp;hellip; working, In general, any infrastructure with which our software interacts.
The most common way to do it is to have a replica of our production infrastructure. Actually, it&amp;rsquo;s relatively easy to achieve using containers, for example, docker containers.
We can set up and run a container for every service we need to replicate, we can orchestrate it with docker-compose and create some makefiles or just a simple script to prepare the infrastructure and run the integration tests.</description></item><item><title>Database migrations in Golang.</title><link>https://sergiocarracedo.es/database-migrations-in-golang/</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/database-migrations-in-golang/</guid><description>During the development of an app, it&amp;rsquo;s very common to do changes in the database schema, for a new feature you need to add a new table, add a new column to an existing table, alter the type of existing column or delete a column.
When you work alone you could do it manually, run the queries to alter the database schemas manually.
What happens when your team is not a one-person team?</description></item></channel></rss>