<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>typescript on Sergio Carracedo</title><link>https://sergiocarracedo.es/tags/typescript/</link><description>Recent content in typescript on Sergio Carracedo</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 12 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://sergiocarracedo.es/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>Typescript typing challenges and type utilities</title><link>https://sergiocarracedo.es/typescript-typing-challenges-and-type-utilities/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/typescript-typing-challenges-and-type-utilities/</guid><description>Recently I was looking for more knowledge about Typescript typing, how to create more advanced and better types, and I can say that it&amp;rsquo;s a big deal, there are a lot of things you can do and, you never imagined before.
During that &amp;ldquo;investigation&amp;rdquo; I found very interesting resources I want to share with you.
Type Challenge https://tsch.js.org/
It&amp;rsquo;s a repository that includes a lot of, very well-documented, and designed typing challenges.</description></item><item><title>Typescript type narrowing, type guards and type predicates ([var] is [type])</title><link>https://sergiocarracedo.es/typescript-type-narrowing/</link><pubDate>Tue, 15 Nov 2022 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/typescript-type-narrowing/</guid><description>One useful feature in Typescript is union types, for example string | number | null, it&amp;rsquo;s a way to specify an argument, return, or variable that can get values with different types.
Type Narrowing is a technique that allows Typescript compiler to reduce the types of a value evaluating guard clauses in compilation time.
Let&amp;rsquo;s see a simple example, imagine we have a function to uppercase a value that can be number, string, or just null, into the function we need to handle the different cases, but at the same time Typescript can understand the types and reduce value type to the correct type in each code&amp;rsquo;s branch.</description></item><item><title>Tips using Typescript and Vue</title><link>https://sergiocarracedo.es/tips-using-typescript-and-vue/</link><pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/tips-using-typescript-and-vue/</guid><description>Typescript is a great &amp;ldquo;language&amp;rdquo;, makes it possible to create more maintainable and understandable software, but requires extra effort to type the variables, the functions&amp;rsquo; arguments, etc&amp;hellip;
Vue 2.x, and even more Vue 3 provide a great typescript integration, providing the necessary types to use your app, but not always are trivial, and you need to know the types you must use in every case.
I want to share with all of you the lessons I learned in my experience using Vue and TS, the typical questions, and the &amp;ldquo;problems&amp;rdquo; I found in the way.</description></item><item><title>Start using Typescript in Vue. The easy way.</title><link>https://sergiocarracedo.es/2020/02/27/start-using-typescript-in-vue-easy-way/</link><pubDate>Thu, 27 Feb 2020 10:58:02 +0000</pubDate><guid>https://sergiocarracedo.es/2020/02/27/start-using-typescript-in-vue-easy-way/</guid><description>If you program in JavaScript probably somebody told you about the advantages of using Typescript or you thought about start using it.
As you can see in this chart, more than 50% Javascript developers are using Typescript
Source: https://2019.stateofjs.com/javascript-flavors/
Start to use a new technology, new paradigm, new framework or anything could be hard and challenging, this is why is important start integrating new technologies avoiding friction with previous one. Today I&amp;rsquo;ll try to show you the easiest way to start using Typescript in your Vue projects.</description></item></channel></rss>