<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Table on Sergio Carracedo</title><link>https://sergiocarracedo.es/tags/table/</link><description>Recent content in Table on Sergio Carracedo</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 12 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://sergiocarracedo.es/tags/table/index.xml" rel="self" type="application/rss+xml"/><item><title>Column related features: Lessons I Learned Creating a Table Component (part III)</title><link>https://sergiocarracedo.es/creating-a-table-component-iii/</link><pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/creating-a-table-component-iii/</guid><description>&lt;blockquote>
&lt;p>This post is part of a post series: &lt;a href="https://sergiocarracedo.es/creating-a-table-component-i/">First part&lt;/a>, &lt;a href="https://sergiocarracedo.es/creating-a-table-component-ii/">Second part&lt;/a>) and an extra related post: &lt;a href="https://sergiocarracedo.es/query-builder-filter-data/">Writing a query builder to filter data&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>I want to use this last post in the series to discuss col-related features, such as col sorting, hidden cols, excluded cols, fixed cols, etc.&lt;/p>
&lt;h2 id="user-defined-cols-vs-internal-cols">User-defined cols vs internal cols&lt;/h2>
&lt;p>It&amp;rsquo;s important to know that one thing is the cols defined by the user, those are data cols and are defined via the cols definition property, and another thing is the cols in general, which include the user cols, but also cols are defined by other props or features of the table (internal cols), for example the col that renders the checkboxes in the case of a selectable table, the col, that shows an arrow to expand the col, the col that renders the action buttons, etc.&lt;/p></description></item><item><title>Table pagination, sorting, filtering and row selection. Lessons I learned creating a table component (part II)</title><link>https://sergiocarracedo.es/creating-a-table-component-ii/</link><pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/creating-a-table-component-ii/</guid><description>&lt;blockquote>
&lt;p>This post is part of a post series: &lt;a href="https://sergiocarracedo.es/creating-a-table-component-i/">First part&lt;/a>), &lt;a href="https://sergiocarracedo.es/creating-a-table-component-iii/">Third part&lt;/a>, and an extra related post: &lt;a href="https://sergiocarracedo.es/query-builder-filter-data/">QWriting a query builder to filter data&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>In the &lt;a href="https://sergiocarracedo.es/creating-a-table-component-i/">first chapter&lt;/a> I talked about the data and cols definition. How to manipulate the data, transform it, and format it.&lt;/p>
&lt;p>This second chapter will focus on the pagination, sorting, and filtering features and the row selection.&lt;/p>
&lt;p>Those features can be or cannot be the responsibility of the table, maybe you can delegate them in your code, and in some true way, but I like to provide a homogeneous and complete developer experience minimizing the repetitive tasks and putting them all together where they are needed.&lt;/p></description></item><item><title>Lessons I learned creating a table component (part I)</title><link>https://sergiocarracedo.es/creating-a-table-component-i/</link><pubDate>Sat, 19 Oct 2024 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/creating-a-table-component-i/</guid><description>&lt;blockquote>
&lt;p>This post is part of a post series: &lt;a href="https://sergiocarracedo.es/creating-a-table-component-ii/">Second part&lt;/a>), &lt;a href="https://sergiocarracedo.es/creating-a-table-component-iii/">Third part&lt;/a>, and an extra related post: &lt;a href="https://sergiocarracedo.es/query-builder-filter-data/">Writing a query builder to filter data&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>I love creating UI components because they are the fundamental bricks supporting a UI application. When the components are good enough, both User and Developer experience increases, making applications consistent, easy to implement, and easy to scale.&lt;/p>
&lt;p>If the UI application shows data in lists, sooner or later, you will need a table. Tables are UI components that can become very complex depending on their features. The goal of this blog post is not to tell you how to program features but to help you understand some typical needs and features tables should implement to give you useful ideas for your custom UI table component&amp;rsquo;s implementation.&lt;/p></description></item></channel></rss>