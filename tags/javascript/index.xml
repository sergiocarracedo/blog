<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javascript on Sergio Carracedo</title><link>https://sergiocarracedo.es/tags/javascript/</link><description>Recent content in javascript on Sergio Carracedo</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 20 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://sergiocarracedo.es/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>The advantage of using cache to decouple the frontend code</title><link>https://sergiocarracedo.es/using-cache-to-decouple-frontend-code/</link><pubDate>Mon, 20 Nov 2023 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/using-cache-to-decouple-frontend-code/</guid><description>We can agree decoupling is a good practice that simplifies the code and the maintainability of the project.
A common way of decoupling the code is to divide the responsibilities into different layers, a very common division is:
view layer: in charge of render HTML and interacting with the user domain layer: in charge of the business logic infra layer: in charge of getting the data from the backend and returning it to the domain layer(here is very common to use the repository pattern, which is just a contract to get the data.</description></item><item><title>Typescript tips for legacy projects: Type only you need</title><link>https://sergiocarracedo.es/typescript-tips/</link><pubDate>Mon, 11 Sep 2023 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/typescript-tips/</guid><description>When you introduce Typescript in a legacy project, or you are using a library that doesn&amp;rsquo;t provide types, you might be tempted to use any for the types you will need. But this is not a good idea, because you are losing all the benefits of Typescript. any it&amp;rsquo;s something you must remove from code, and from your mind.
Type a shape progressively It&amp;rsquo;s very common to have an object with a lot of properties, and trying to type completely the shape (that is the final goal) of an object you don&amp;rsquo;t completely understand can be an overwhelming task.</description></item><item><title>How Vue's reactivity works (I): Object.defineProperty</title><link>https://sergiocarracedo.es/how-vue-reactivity-works-i/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/how-vue-reactivity-works-i/</guid><description>Maybe you don&amp;rsquo;t need to know how Vue reactivity works under the hood to make Vue apps, but anyway it will be interesting and useful.
In this context reactivity, means, simplifying, the capacity to detect a data change and do something after that.
In a Vue component, reactivity, means that the component will be re-rendered (totally or partially) after a change in the value of a variable to show the component updated with the new value.</description></item></channel></rss>