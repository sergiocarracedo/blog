<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing on Sergio Carracedo</title><link>https://sergiocarracedo.es/tags/testing/</link><description>Recent content in Testing on Sergio Carracedo</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 09 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://sergiocarracedo.es/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Integration tests in Golang with dockertest</title><link>https://sergiocarracedo.es/integration-tests-in-golang-with-dockertest/</link><pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate><guid>https://sergiocarracedo.es/integration-tests-in-golang-with-dockertest/</guid><description>&lt;p>Do integration testing (or system testing) usually means to have a database populated with data, services like redis, elasticsearch, etc&amp;hellip; working, In general, any infrastructure with which our software interacts.&lt;/p>
&lt;p>The most common way to do it is to have a replica of our production infrastructure. Actually, it&amp;rsquo;s relatively easy to achieve using containers, for example, docker containers.&lt;/p>
&lt;p>We can set up and run a container for every service we need to replicate, we can orchestrate it with docker-compose and create some makefiles or just a simple script to prepare the infrastructure and run the integration tests.&lt;/p></description></item></channel></rss>